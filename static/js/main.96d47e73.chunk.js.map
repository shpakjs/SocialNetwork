{"version":3,"sources":["api/api.js","components/Navbar/Navbar.module.css","redux/dialogsReducer.js","redux/usersReducer.js","assets/images/puzzle.svg","assets/images/login.jpg","components/News/News.module.css","components/Music/Music.module.css","components/Settings/Settings.module.css","assets/images/preloader.gif","components/common/Preloader/Preloader.module.css","serviceWorker.js","components/Navbar/Navbar.js","redux/authReducer.js","components/Navbar/NavbarContainer.js","components/Login/Login.js","components/Login/LoginContainer.js","components/News/News.js","components/Music/Music.js","components/Settings/Settings.js","redux/appReducer.js","redux/sidebarReducer.js","redux/reduxStore.js","hoc/withSuspense.js","App.js","index.js","hoc/withAuthRedirect.js","components/common/FormControls/FormControls.js","components/Login/Login.module.css","components/common/Preloader/Preloader.js","utils/validators/validators.js","components/common/FormControls/FormControls.module.css","redux/profileReducer.js"],"names":["instance","axios","baseURL","withCredentials","crossDomain","headers","API-KEY","usersAPI","getUsers","currentPage","arguments","length","undefined","pageSize","get","concat","then","response","data","toggleFollowingUser","_toggleFollowingUser","Object","C_Users_iushp_shpakjs_SocialNetwork_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_iushp_shpakjs_SocialNetwork_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","userId","isFollow","wrap","_context","prev","next","delete","t0","sent","post","abrupt","stop","_x","_x2","apply","this","profileAPI","getStatus","setStatus","status","put","savePhoto","photoFile","formData","FormData","append","Content-Type","getUserProfile","saveUserProfile","authAPI","me","login","email","password","remeberMe","captcha","logout","securityAPI","getCaptcha","dialogsAPI","getDialogs","startDialog","getDialogMessages","checkIfMessageVieved","messageId","sendMessage","messageText","putToSpamMessage","removeMessage","restoreMessage","getNewMessages","getNewMessagesFromDate","date","module","exports","nav__wrapper","logo","nav","item","active","initialState","dialogs","messages","selectedMessages","isFetching","activeDialog","selectMessage","type","toggleIsFetchingAC","_ref","dispatch","_ref2","_callee2","_context2","items","dialogId","body","_ref3","_callee3","_context3","resultCode","change","_x3","_ref4","_callee4","_context4","_x4","spamMessage","_ref5","_callee5","_context5","_x5","dialogsReducer","state","action","C_Users_iushp_shpakjs_SocialNetwork_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_3__","C_Users_iushp_shpakjs_SocialNetwork_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","selectedItems","includes","filter","users","totalUsersCount","followingInProgress","toggleFollowingAC","setUsersAC","toggleFollowingProgressAC","requestUsers","totalCount","toggleFollowing","isFollowing","usersReducer","stateCopy","map","user","id","followed","filteredArr","value","__webpack_require__","p","news","music","settings","preloader","Boolean","window","location","hostname","match","Navbar","props","react_default","createElement","className","styles","src","alt","react_router_dom","to","activeClassName","onClick","isAuth","captchaUrl","setAuthUserData","payload","getAuthUserData","asyncToGenerator","regenerator_default","_response$data","_login","getCaptchaUrl","url","authReducer","objectSpread","NavbarContainer","components_Navbar_Navbar","Fragment","React","Component","compose","connect","authPage","withAuthRedirect","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","requiredField","Input","summaryError","Login","react_router","style","backgroundImage","bg","onLogin","rememberMe","LoginAPIComponent","_this","loginForm","components_Login_Login","LoginContainer","message","stopSubmit","_error","AuthRedirectComponent","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebarPage","usersPage","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddlewear","withSuspense","Suspense","fallback","Preloader","DialogsContainer","lazy","e","bind","UsersContainer","ProfileContainer","App","initializeApp","Navbar_NavbarContainer","path","render","components_News_News","components_Music_Music","components_Settings_Settings","Login_LoginContainer","AppConatainer","promise","Promise","all","result","withRouter","MainApp","es","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","mapStateToPropsForRedirect","RedirectComponent","_React$Component","C_Users_iushp_shpakjs_SocialNetwork_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","C_Users_iushp_shpakjs_SocialNetwork_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_iushp_shpakjs_SocialNetwork_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","C_Users_iushp_shpakjs_SocialNetwork_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","C_Users_iushp_shpakjs_SocialNetwork_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","react__WEBPACK_IMPORTED_MODULE_5___default","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","FormControl","input","meta","child","C_Users_iushp_shpakjs_SocialNetwork_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","hasError","touched","react__WEBPACK_IMPORTED_MODULE_1___default","formControl","children","Textarea","restProps","assign","placeholder","name","validator","component","text","redux_form__WEBPACK_IMPORTED_MODULE_3__","validate","htmlFor","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_assets_images_preloader_gif__WEBPACK_IMPORTED_MODULE_1__","_assets_images_preloader_gif__WEBPACK_IMPORTED_MODULE_1___default","_Preloader_module_css__WEBPACK_IMPORTED_MODULE_2__","_Preloader_module_css__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","maxLengthCreator","maxLength","posts","author","profileInfo","addPostAC","newPostText","setStatusAC","setPhotoAC","photo","updateStatus","C_Users_iushp_shpakjs_SocialNetwork_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","C_Users_iushp_shpakjs_SocialNetwork_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","photos","getProfile","saveProfile","getState","errorFieldsArr","errorData","slice","indexOf","split","toLowerCase","C_Users_iushp_shpakjs_SocialNetwork_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","reject","_x6","_ref6","_callee6","_context6","push","_x7","newPost","fullName","Date","toLocaleDateString","C_Users_iushp_shpakjs_SocialNetwork_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_4__","C_Users_iushp_shpakjs_SocialNetwork_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_3__","postId"],"mappings":"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","file":"static/js/main.96d47e73.chunk.js","sourcesContent":["import * as axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true, \r\n    crossDomain: true,\r\n    headers: {\r\n        \"API-KEY\": '77a146e4-229d-496d-9655-f77f4dafa8d8'\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    },\r\n    async toggleFollowingUser(userId, isFollow) {\r\n        let response = isFollow \r\n            ? await instance.delete(`follow/${userId}`) \r\n            : await instance.post(`follow/${userId}`)\r\n        return response.data;\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n        .then(response => {\r\n            return response.data\r\n        });\r\n    },\r\n    setStatus(status) {\r\n        return instance.put(`profile/status`, {status})\r\n        .then(response => {\r\n            return response.data\r\n        });\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append('image', photoFile)\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/formdata'\r\n            }\r\n        })\r\n        .then(response => {\r\n            return response.data\r\n        });\r\n    },\r\n    getUserProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n        .then(response => {\r\n            return response.data\r\n        });\r\n    },\r\n    saveUserProfile(formData) {\r\n        return instance.put(`profile`, formData )\r\n        .then(response => {\r\n            return response.data\r\n        });\r\n    },\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    },\r\n    login(email, password, remeberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, {email, password, remeberMe, captcha});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n};\r\n\r\nexport const securityAPI = {\r\n    getCaptcha() {\r\n        return instance.get('security/get-captcha-url');\r\n    }\r\n}\r\n\r\nexport const dialogsAPI = {\r\n    getDialogs() {\r\n        return instance.get('dialogs');\r\n    },\r\n    startDialog(userId) {\r\n        return instance.put(`dialogs/${userId}`);\r\n    },\r\n    getDialogMessages(userId) {\r\n        return instance.get(`dialogs/${userId}/messages`);\r\n    },\r\n    checkIfMessageVieved(messageId) {\r\n        return instance.get(`dialogs/messages/${messageId}/viewed`);\r\n    },\r\n    sendMessage(userId, messageText) {\r\n        return instance.post(`dialogs/${userId}/messages`, messageText);\r\n    },\r\n    putToSpamMessage(messageId) {\r\n        return instance.post(`dialogs/messages/${messageId}/spam`);\r\n    },\r\n    removeMessage(messageId) {\r\n        return instance.delete(`dialogs/messages/${messageId}`); //deletes only for current user\r\n    },\r\n    restoreMessage(messageId) {\r\n        return instance.put(`dialogs/messages/${messageId}/restore`); // restores from deleted and spam messages\r\n    },\r\n    getNewMessages() {\r\n        return instance.get('dialogs/messages/new/count'); //list of new messages\r\n    },\r\n    getNewMessagesFromDate(userId, date) {\r\n        return instance.get(`dialogs/${userId}/messages/new?newerThen=${date}`); //get messages from selected dialog newer then date\r\n    }\r\n\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav__wrapper\":\"Navbar_nav__wrapper__UxdnR\",\"logo\":\"Navbar_logo__N14yr\",\"nav\":\"Navbar_nav__1fjvU\",\"item\":\"Navbar_item__1WlUz\",\"active\":\"Navbar_active__11Z3n\"};","import {dialogsAPI} from \"../api/api\";\r\nimport {change} from 'redux-form';\r\n\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\nconst GET_DIALOGS_SUCCESS = 'GET_DIALOGS_SUCCESS';\r\nconst GET_DIALOG_MESSAGES_SUCCESS = 'GET_DIALOG_MESSAGES_SUCCESS';\r\nconst SELECT_MESSAGE = 'SELECT_MESSAGE';\r\nconst CLEAR_SELECTED_MESSAGES = 'CLEAR_SELECTED_MESSAGES';\r\nlet initialState = {\r\n    dialogs: [],\r\n    messages: [],\r\n    selectedMessages: [],\r\n    isFetching: false,\r\n    activeDialog: null\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case GET_DIALOGS_SUCCESS: \r\n            return {\r\n                ...state,\r\n                dialogs: [...action.dialogs]\r\n            }\r\n        case GET_DIALOG_MESSAGES_SUCCESS: \r\n            return {\r\n                ...state,\r\n                messages : [...action.messages],\r\n                activeDialog: action.dialogId\r\n\r\n            }\r\n        case SELECT_MESSAGE: \r\n            let selectedItems = [];\r\n            //first check if we have to select or deselect message\r\n            if (state.selectedMessages.includes(action.messageId)) {\r\n                selectedItems = state.selectedMessages.filter(item => item !== action.messageId );\r\n            } else {\r\n                selectedItems = [...state.selectedMessages, action.messageId];\r\n            }\r\n            return {\r\n                ...state,\r\n                selectedMessages: selectedItems\r\n            }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n        case CLEAR_SELECTED_MESSAGES: {\r\n            return { ...state, selectedMessages: []}\r\n        }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\nexport const getDialogsSuccess = (dialogs) => ({ type:  GET_DIALOGS_SUCCESS , dialogs: dialogs});  \r\n\r\nexport const selectMessage = (messageId) => ({ type: SELECT_MESSAGE , messageId: messageId}); \r\n\r\nexport const clearSelectedMessages = () => ({ type: CLEAR_SELECTED_MESSAGES }); \r\n\r\nexport const getDialogMessagesSuccess = (messages, dialogId) => ({ type:  GET_DIALOG_MESSAGES_SUCCESS , messages: messages, dialogId: dialogId});  \r\n\r\nexport const toggleIsFetchingAC = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\n//thunk creator\r\nexport const getDialogs = () => async (dispatch) => {\r\n    dispatch(toggleIsFetchingAC(true));\r\n    let response = await dialogsAPI.getDialogs();\r\n    if(response.data.length > 0) {\r\n        dispatch(getDialogsSuccess(response.data));\r\n    }\r\n    dispatch(toggleIsFetchingAC(false));\r\n}\r\n\r\nexport const getDialogMessages = (userId) => async (dispatch) => {\r\n    dispatch(toggleIsFetchingAC(true));\r\n    let response = await dialogsAPI.getDialogMessages(userId);\r\n    dispatch(clearSelectedMessages());\r\n    dispatch(getDialogMessagesSuccess(response.data.items, userId));\r\n    dispatch(toggleIsFetchingAC(false));\r\n}\r\n\r\nexport const sendMessage = (userId, body) => async (dispatch) => {\r\n    let response = await dialogsAPI.sendMessage(userId, body);\r\n    if(response.data.resultCode === 0) {\r\n        dispatch(change('newMessage', 'body', null));\r\n        dispatch(getDialogMessages(userId));\r\n    }\r\n}\r\nexport const removeMessage = (messageId, dialogId) => async (dispatch) => {\r\n    let response = await dialogsAPI.removeMessage(messageId);\r\n    if(response.data.resultCode === 0) {\r\n        dispatch(clearSelectedMessages());\r\n        dispatch(getDialogMessages(dialogId));\r\n    }\r\n}\r\nexport const spamMessage = (messageId, dialogId) => async (dispatch) => {\r\n    let response = await dialogsAPI.putToSpamMessage(messageId);\r\n    if(response.data.resultCode === 0) {\r\n        dispatch(clearSelectedMessages());\r\n        dispatch(getDialogMessages(dialogId));\r\n    }\r\n}\r\n\r\nexport default dialogsReducer;","import {usersAPI} from '../api/api';\r\nconst TOGGLE_FOLLOW = 'FOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\nconst TOGGLE_FOLLOWING_PROGRESS = 'TOGGLE-FOLLOWING-PROGRESS';\r\n\r\nlet initialState  = {\r\n    users: [],\r\n    pageSize: 20,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case TOGGLE_FOLLOW: {\r\n            let stateCopy = {...state};\r\n            stateCopy.users = state.users.map((user) => {\r\n                if(user.id === action.userId) {\r\n                    return {...user, followed: !user.followed};\r\n                }\r\n                else {\r\n                    return {...user};\r\n                }\r\n            });\r\n            return stateCopy;\r\n        }\r\n        case SET_USERS: {\r\n            return { ...state, users: [...action.users], currentPage: action.currentPage, totalUsersCount: action.totalUsersCount }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n        case TOGGLE_FOLLOWING_PROGRESS: {\r\n            if(state.followingInProgress.includes(action.followingInProgress)) {\r\n                let filteredArr = state.followingInProgress.filter(function(value){\r\n                    return value !== action.followingInProgress;\r\n                });\r\n                return { ...state, followingInProgress: [...filteredArr]}\r\n            }\r\n            else{\r\n                return { ...state, followingInProgress: [...state.followingInProgress, action.followingInProgress]}\r\n            }\r\n            \r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const toggleFollowingAC = (userId) => ({ type: TOGGLE_FOLLOW , userId});\r\n\r\nexport const setUsersAC = (users, currentPage, totalUsersCount) => \r\n    ({type: SET_USERS, users, currentPage,  totalUsersCount});\r\n    \r\nexport const toggleIsFetchingAC = (isFetching) => \r\n    ({type: TOGGLE_IS_FETCHING, isFetching});\r\n\r\nexport const toggleFollowingProgressAC = (followingInProgress) => \r\n    ({type: TOGGLE_FOLLOWING_PROGRESS, followingInProgress});\r\n\r\n//thunk creator\r\nexport const requestUsers = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetchingAC(true));\r\n    let response = await usersAPI.getUsers(currentPage, pageSize);\r\n    dispatch(setUsersAC(response.items, currentPage, response.totalCount));\r\n    dispatch(toggleIsFetchingAC(false));\r\n}\r\n\r\nexport const toggleFollowing = (userId , isFollowing) => async (dispatch) => {\r\n    dispatch(toggleFollowingProgressAC(userId));\r\n    let response = await usersAPI.toggleFollowingUser(userId, isFollowing);\r\n    if(response.resultCode === 0) {\r\n        dispatch(toggleFollowingAC(userId));\r\n        dispatch(toggleFollowingProgressAC(userId));\r\n    }\r\n}\r\n\r\nexport default usersReducer;","module.exports = __webpack_public_path__ + \"static/media/puzzle.ab9cd3a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/login.d9c7a975.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__99sP8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__2jtUx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__3U_EL\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.8c636777.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__2P_ut\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport styles from './Navbar.module.css';\r\nimport logo from './../../assets/images/puzzle.svg';\r\n\r\nconst Navbar = (props) => {\r\n    return (<div className = {styles.nav__wrapper}> \r\n            <img src={logo} className={styles.logo} alt=\"\"/>\r\n            <nav className = {styles.nav}>\r\n                <div className ={`${styles.item} ${styles.active}`}>\r\n                    <NavLink to=\"/profile\" activeClassName = {styles.active}>Profile</NavLink>\r\n                </div>\r\n                <div className = {styles.item}>\r\n                    <NavLink to=\"/dialogs\" activeClassName = {styles.active}>Messages</NavLink>\r\n                </div>\r\n                <div className = {styles.item}>\r\n                    <NavLink to=\"/news\" activeClassName = {styles.active}>News</NavLink>\r\n                </div>\r\n                <div className = {styles.item}>\r\n                    <NavLink to=\"/music\" activeClassName = {styles.active}>Music</NavLink>\r\n                </div>\r\n                <div className = {styles.item}>\r\n                    <NavLink to=\"/settings\" activeClassName = {styles.active}>Settings</NavLink>\r\n                </div>\r\n                <div className = {styles.item}>\r\n                    <NavLink to=\"/users\" activeClassName = {styles.active}>Users</NavLink>\r\n                </div>\r\n                <div className = {styles.item}>\r\n                    <button onClick={props.logout} >Logout</button>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS';\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null //if null captcha is not required\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case GET_CAPTCHA_URL_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                captchaUrl:action.url\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const setCaptchaUrl = (url) => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS, url: url\r\n});\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload:\r\n        {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.resultCode === 0) {\r\n        let {id, login, email} = response.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else if(response.data.resultCode === 10) {\r\n        dispatch(getCaptchaUrl());\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    let response = await securityAPI.getCaptcha();\r\n    dispatch(setCaptchaUrl(response.data.url));\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Navbar from './Navbar';\r\nimport { logout } from '../../redux/authReducer';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass NavbarContainer extends React.Component {\r\n    render() {\r\n        return  this.props.isAuth ? <Navbar {...this.props} />: <></>;\r\n    }\r\n};\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        login: state.authPage.login,\r\n        userId: state.authPage.userId,\r\n        isAuth: state.authPage.isAuth,\r\n    }\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, {logout}), withAuthRedirect )(NavbarContainer);\r\n","import React from 'react';\r\nimport styles from './Login.module.css';\r\nimport bg from '../../assets/images/login.jpg';\r\nimport {reduxForm} from 'redux-form';\r\nimport { Input, createField } from '../common/FormControls/FormControls';\r\nimport { requiredField } from '../../utils/validators/validators';\r\nimport { Redirect } from 'react-router-dom';\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return <form onSubmit = {handleSubmit}>\r\n        <h4>Login</h4>\r\n        { createField(\"Email\", \"login\", requiredField, Input, null, {}) }\r\n        { createField(\"Password\", \"password\", requiredField, Input, null, {type:\"password\"}) }\r\n        { createField(\"Remember me\", \"rememberMe\", null, \"input\", \"remember me\", {type:\"checkbox\"}) }\r\n        { error && <div className={styles.summaryError}>{ error }</div> }\r\n        { captchaUrl && \r\n            <div>\r\n                <img src={captchaUrl} className={styles.captcha} alt=\"captcha\"/>\r\n                { createField(\"enter symbols from picture\", \"captcha\", requiredField, Input, null, {}) }\r\n            </div>  \r\n        }\r\n        <button>Login</button>\r\n\r\n    </form>;\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.onLogin(formData.login, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n    if(props.isAuth) return <Redirect to={\"/profile\"} />\r\n    return <div className={styles.login} style={{backgroundImage: `url(${bg})`}}><LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/></div>\r\n\r\n}\r\nexport default Login;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport styles from './Login.module.css';\r\nimport {login} from '../../redux/authReducer';\r\nimport Login from './Login';\r\n\r\nclass LoginAPIComponent  extends React.Component {\r\n    onLogin = (email, password, rememberMe, captcha) => {\r\n        this.props.login(email, password, rememberMe, captcha);\r\n    }\r\n    render() {\r\n        return( <div className={styles.loginForm}>\r\n            <Login\r\n                isAuth = {this.props.isAuth}\r\n                captchaUrl = {this.props.captchaUrl}\r\n                onLogin = {this.onLogin}\r\n        /></div>);\r\n    }\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.authPage.isAuth,\r\n        captchaUrl : state.authPage.captchaUrl\r\n    }\r\n};\r\n\r\nconst LoginContainer = connect(mapStateToProps, {\r\n    login: login,\r\n})(LoginAPIComponent);\r\n\r\nexport default LoginContainer;\r\n","import React from 'react';\r\nimport styles from './News.module.css';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div className = {styles.news}> \r\n            News\r\n        </div>\r\n    );\r\n}\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(News);\r\nexport default AuthRedirectComponent;","import React from 'react';\r\nimport styles from './Music.module.css';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div className = {styles.music}> \r\n            Music\r\n        </div>\r\n    );\r\n}\r\nlet AuthRedirectComponent = withAuthRedirect(Music);\r\nexport default AuthRedirectComponent;","import React from 'react';\r\nimport styles from './Settings.module.css';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nconst Settings = () => {\r\n    return (\r\n        <div className = {styles.settings}> \r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(Settings);\r\n\r\nexport default AuthRedirectComponent;","import {getAuthUserData} from \"./authReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(result => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\n\r\nexport default appReducer;","\r\nconst sidebarReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case 'sidebar': \r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default sidebarReducer;","import {createStore, combineReducers, applyMiddleware, compose} from \"redux\";\r\nimport profileReducer from './profileReducer';\r\nimport dialogsReducer from './dialogsReducer';\r\nimport sidebarReducer from './sidebarReducer';\r\nimport usersReducer from './usersReducer';\r\nimport authReducer from './authReducer';\r\nimport appReducer from './appReducer';\r\nimport thunkMiddlewear from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebarPage: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    authPage: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nlet store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddlewear)));\r\n\r\nexport default store;","import React from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader />} >\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    };\r\n}","import React from 'react';\r\nimport {Route, withRouter} from 'react-router-dom';\r\nimport './App.css';\r\nimport NavbarContainer from './components/Navbar/NavbarContainer';\r\nimport LoginContainer from './components/Login/LoginContainer';\r\nimport News from './components/News/News';\r\nimport Music from './components/Music/Music';\r\nimport Settings from './components/Settings/Settings';\r\nimport { initializeApp } from './redux/appReducer';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport {Provider} from 'react-redux';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport store from './redux/reduxStore';\r\nimport { withSuspense } from './hoc/withSuspense';\r\n\r\n//lazy loading\r\nconst DialogsContainer = React.lazy( () => import('./components/Dialogs/DialogsContainer' ));\r\nconst UsersContainer = React.lazy( () => import('./components/Users/UsersContainer'));\r\nconst ProfileContainer = React.lazy( () => import('./components/Profile/ProfileContainer'));\r\n\r\nclass App extends React.Component {\r\n  componentDidMount () {\r\n      this.props.initializeApp();\r\n  }\r\n\r\n  render() {\r\n    if(!this.props.initialized) {\r\n      return <Preloader/>\r\n    }\r\n\r\n    return (<div className=\"app-wraper\">\r\n      <NavbarContainer />\r\n      <div className=\"app-wraper-content\">\r\n          <Route path= '/profile:userId?' render ={withSuspense(ProfileContainer)}/>\r\n          <Route path= '/dialogs' render ={withSuspense(DialogsContainer)} />\r\n          <Route path= '/users' render = {withSuspense(UsersContainer)}/>\r\n          <Route path= '/news' render =  { () => <News />} />\r\n          <Route path= '/music' render = { () => <Music /> } />\r\n          <Route path= '/settings' render = { () => <Settings/> } />\r\n          <Route path= '/login' render = { () => <LoginContainer/>} />\r\n      </div>\r\n    </div>)\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    initialized: state.app.initialized\r\n  }\r\n}\r\n\r\nlet AppConatainer = compose(\r\n    connect(mapStateToProps, {initializeApp}),\r\n    withRouter)(App);\r\n\r\nconst MainApp = (props) => {\r\n    return <HashRouter>\r\n        <Provider store={store}>\r\n          <AppConatainer/>\r\n        </Provider>\r\n    </HashRouter>;\r\n}\r\n\r\nexport default MainApp;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport MainApp from './App';\r\n\r\nReactDOM.render(\r\n    <MainApp />, \r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.authPage.isAuth\r\n    }\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n            return <Component {...this.props} />;\r\n        }\r\n    }\r\n    let ConnectRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectRedirectComponent;\r\n}\r\n","import React from 'react';\r\nimport styles from './FormControls.module.css';\r\nimport {Field} from 'redux-form';\r\n\r\nexport const FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (<div className = {styles.formControl + \" \" + (hasError ? styles.error : '') }>\r\n            {props.children}\r\n        { hasError && <span>{meta.error}</span> }\r\n    </div>);\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...props.input} {...restProps}></textarea></FormControl>\r\n} \r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...props.input} {...restProps}  /></FormControl>\r\n} \r\nexport const createField = (placeholder, name, validator, component, text, props) => {\r\n    return <><Field placeholder={placeholder} \r\n            component={component} \r\n            name={name}\r\n            validate={validator}\r\n            id={name}\r\n            {...props}\r\n            />{ text && <label htmlFor={name}>{text}</label>}</>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__19ksd\",\"summaryError\":\"Login_summaryError__B2KU3\",\"captcha\":\"Login_captcha__2kQXm\"};","import React from 'react';\r\nimport preloader from '../../../assets/images/preloader.gif';\r\nimport styles from './Preloader.module.css';\r\n\r\nconst Preloader = (props) => {\r\n    return <div className={styles.preloader}>\r\n    { props.isFetching ? <img src={preloader} alt=\"preloader\"/> : ''}\r\n    </div>;\r\n}\r\n\r\nexport default Preloader;","export const requiredField = value => {\r\n    if(value) return undefined;\r\n\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\nexport const maxLength = value => {\r\n    if(value && value.length > 30) return 'Max length is 30 symbols';\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2-Yg6\",\"error\":\"FormControls_error__2zleJ\"};","import {profileAPI, dialogsAPI} from '../api/api';\r\nimport {stopSubmit} from 'redux-form';\r\nimport {push} from 'react-router-redux';\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\nconst SET_PROFILE_INFO = 'SET-PROFILE-INFO';\r\nconst SET_STATUS = 'SET-STATUS';\r\nconst SET_PHOTO = 'SET-PHOTO';\r\nconst DELETE_POST = 'DELETE-POST';\r\n\r\nlet initialState  = {\r\n    posts: [\r\n        { id: 1, author: 'shpakjs', date: '7/13/2019', body:'Hi'},\r\n        { id: 2, author: 'shpakjs', date: '7/11/2019', body:'Hey'},\r\n        { id: 3, author: 'shpakjs', date: '6/20/2019', body:'Ho'},\r\n        { id: 4, author: 'shpakjs', date: '7/17/2019', body:'Hooray'},\r\n    ],\r\n    profileInfo: null,\r\n    status: null,\r\n    isFetching: false\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: state.posts.length+2,\r\n                author: state.profileInfo.fullName,\r\n                body: action.newPostText,\r\n                date: (new Date()).toLocaleDateString('en-us'),\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            };\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state,\r\n                posts: state.posts.filter(item => item.id !== action.postId)};\r\n        }\r\n        case SET_PROFILE_INFO: {\r\n            return { ...state, profileInfo: action.profileInfo };\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n        case SET_STATUS: {\r\n            return { ...state, status: action.status }\r\n        }\r\n        case SET_PHOTO: {\r\n            return { ...state,  profileInfo: { ...state.profileInfo, photos: action.photo } }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const addPostAC = (newPostText) => ({ type: ADD_POST , newPostText: newPostText});\r\n\r\nexport const deletePostAC = (postId) => ({ type: DELETE_POST , postId: postId});\r\n\r\nexport const setProfileInfoAC = (profileInfo) => ({type: SET_PROFILE_INFO, profileInfo: profileInfo });\r\n\r\nexport const toggleIsFetchingAC = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\n\r\nexport const setStatusAC = (status) => ({type: SET_STATUS, status});\r\n\r\nexport const setPhotoAC = (photo) => ({type: SET_PHOTO, photo});\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.setStatus(status);\r\n    if(response.data.resultCode === 0){\r\n        dispatch(setStatusAC(status));\r\n    }\r\n}\r\n//thunk creator\r\nexport const getStatus = (userId) => async(dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatusAC(response));\r\n}\r\n\r\n//thunk creator\r\nexport const savePhoto = (photo) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(photo);\r\n    if(response.resultCode === 0) {\r\n        dispatch(setPhotoAC(response.data.photos));\r\n    }\r\n}\r\n//thunk creator\r\nexport const getProfile = (userId) => async(dispatch) => {\r\n    dispatch(toggleIsFetchingAC(true));\r\n    let response = await profileAPI.getUserProfile(userId); \r\n    dispatch(setProfileInfoAC(response));\r\n    dispatch(toggleIsFetchingAC(false));\r\n}\r\n\r\n//thunk creator\r\nexport const saveProfile = (formData) => async(dispatch, getState) => {\r\n    let response = await profileAPI.saveUserProfile(formData);\r\n    if(response.resultCode === 0) {\r\n        let userId = getState().authPage.userId;\r\n        dispatch(getProfile(userId));\r\n    } else {\r\n        let message = response.messages[0];\r\n        let errorFieldsArr = message.slice(message.indexOf('(') + 1, message.indexOf(')')).split('->');\r\n        let errorData = {};\r\n        errorFieldsArr[1] \r\n            ? errorData[errorFieldsArr[0].toLowerCase()] = { [errorFieldsArr[1].toLowerCase()]: 'Invalid data' }  \r\n            : errorData[errorFieldsArr[0].toLowerCase()] = 'Invalid data';\r\n        dispatch(stopSubmit(\"edit-profile\", errorData));\r\n        return Promise.reject(message);\r\n    }\r\n}\r\n\r\n//thunk creator\r\nexport const startDialog = (userId) => async(dispatch) => {\r\n    let response = await dialogsAPI.startDialog(userId); \r\n    if(response.data.resultCode === 0) {\r\n        dispatch(push('/dialogs'));\r\n    }   \r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}
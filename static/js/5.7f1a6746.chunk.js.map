{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/NewMessage.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","dialogs","dialogs__items","messages","new__message","dialog","active","message","author","time","body","DialogItem","props","path","concat","id","react_default","a","createElement","react_router_dom","to","activeClassName","styles","className","name","Message","message__info","maxLength100","maxLengthCreator","NewMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","requiredField","NewMessage","formData","sendMessage","Dialogs","dialogsElements","map","Dialogs_DialogItem_DialogItem","key","messagesElements","Dialogs_Message_Message","Dialogs_NewMessage","addMessage","mapStateToProps","state","dialogsPage","newMessageText","mapDispatchToProps","dispatch","messageBody","sendMessageCreator","compose","connect","withAuthRedirect"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,eAAA,gCAAAC,SAAA,0BAAAC,aAAA,oDCAlBL,EAAAC,QAAA,CAAkBK,OAAA,2BAAAC,OAAA,iDCAlBP,EAAAC,QAAA,CAAkBO,QAAA,yBAAAC,OAAA,wBAAAC,KAAA,sBAAAC,KAAA,gICeHC,EAZI,SAACC,GAChB,IAAIC,EAAI,YAAAC,OAAeF,EAAMG,IAC7B,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIC,GAAMP,EACNQ,gBAAmBC,IAAOhB,OAC1BiB,UAAaD,IAAOjB,QACnBO,EAAMY,yBCIJC,EAZC,SAACb,GACb,OACII,EAAAC,EAAAC,cAAA,OAAKK,UAAaD,IAAOf,SACrBS,EAAAC,EAAAC,cAAA,OAAKK,UAAaD,IAAOI,eACrBV,EAAAC,EAAAC,cAAA,OAAKK,UAAaD,IAAOd,QAASI,EAAMJ,QACxCQ,EAAAC,EAAAC,cAAA,OAAKK,UAAaD,IAAOb,MAAOG,EAAMH,OAEzCG,EAAML,2CCJboB,EAAeC,YAAiB,KAchCC,EAAsBC,YAAU,CAACC,KAAM,cAAjBD,CAZL,SAAClB,GACpB,OAAOI,EAAAC,EAAAC,cAAA,QAAMc,SAAUpB,EAAMqB,cACzBjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CACIC,UAAWC,IACXZ,KAAK,iBACLa,YAAY,6BACZC,SAAU,CAACC,IAAeZ,KAE9BX,EAAAC,EAAAC,cAAA,yBAYOsB,EAPI,SAAC5B,GAIhB,OAAOI,EAAAC,EAAAC,cAAA,OAAKK,UAAYD,IAAOlB,cAAeY,EAAAC,EAAAC,cAACW,EAAD,CAAqBG,SAH3C,SAACS,GACrB7B,EAAM8B,YAAYD,QCgBXE,EAjCC,SAAC/B,GACb,IAAIgC,EAAkBhC,EAAMX,QAAQ4C,IAAK,SAAAxC,GACrC,OACIW,EAAAC,EAAAC,cAAC4B,EAAD,CACIC,IAAO1C,EAAOU,GACdS,KAAQnB,EAAOmB,KACfT,GAAMV,EAAOU,OAGrBiC,EAAmBpC,EAAMT,SAAS0C,IAAK,SAAAtC,GACvC,OACIS,EAAAC,EAAAC,cAAC+B,EAAD,CACAF,IAAOxC,EAAQQ,GACfR,QAAYA,EAAQA,QACpBC,OAAUD,EAAQC,OAClBC,KAAQF,EAAQE,SAKxB,OACIO,EAAAC,EAAAC,cAAA,OAAKK,UAAaD,IAAOrB,SACrBe,EAAAC,EAAAC,cAAA,OAAKK,UAAaD,IAAOpB,gBACnB0C,GAEN5B,EAAAC,EAAAC,cAAA,OAAKK,UAAaD,IAAOnB,UACnB6C,EACFhC,EAAAC,EAAAC,cAACgC,EAAD,CAAYR,YAAa9B,EAAMuC,gDC1B3CC,EAAkB,SAACC,GACnB,MAAO,CACHpD,QAASoD,EAAMC,YAAYrD,QAC3BE,SAAUkD,EAAMC,YAAYnD,SAC5BoD,eAAgBF,EAAMC,YAAYC,iBAGtCC,EAAqB,SAACC,GACtB,MAAO,CACHN,WAAY,SAACO,GACTD,EAASE,YAAmBD,OAKxCE,YACIC,YAAQT,EAAiBI,GACzBM,IAFJF,CAGEjB,GAEaiB,sBACXC,YAAQT,EAAiBI,GACzBM,IAFWF,CAGbjB","file":"static/js/5.7f1a6746.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__12UMW\",\"dialogs__items\":\"Dialogs_dialogs__items__1-9OH\",\"messages\":\"Dialogs_messages__3iAfy\",\"new__message\":\"Dialogs_new__message__PNZLV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__jCvld\",\"active\":\"DialogItem_active__3_aSe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1uRZh\",\"author\":\"Message_author__3Nsut\",\"time\":\"Message_time__1pNJJ\",\"body\":\"Message_body__2b47x\"};","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport styles from './DialogItem.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = `/dialogs/${props.id}`;\r\n    return (\r\n        <NavLink \r\n            to = {path} \r\n            activeClassName = {styles.active} \r\n            className = {styles.dialog}>\r\n            {props.name}\r\n        </NavLink>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport styles from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className = {styles.message}>\r\n            <div className = {styles.message__info}>\r\n                <div className = {styles.author}>{props.author}</div>\r\n                <div className = {styles.time}>{props.time}</div>\r\n            </div>\r\n            {props.message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport {reduxForm, Field} from 'redux-form';\r\nimport styles from './Dialogs.module.css';\r\nimport { maxLengthCreator, requiredField } from '../../utils/validators/validators';\r\nimport { Textarea } from '../common/FormControls/FormControls';\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst NewMessageForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <Field \r\n            component={Textarea}\r\n            name=\"newMessageBody\" \r\n            placeholder=\"Enter what you want to say\" \r\n            validate={[requiredField, maxLength100]}\r\n        />\r\n        <button>Send</button>\r\n    </form>;\r\n\r\n}\r\nconst NewMessageReduxForm = reduxForm({form: 'newMessage'})(NewMessageForm);\r\nconst NewMessage = (props) => {\r\n    const onSubmitMessage = (formData) => {\r\n        props.sendMessage(formData);\r\n    }\r\n    return <div className={ styles.new__message }><NewMessageReduxForm onSubmit={onSubmitMessage}/></div>\r\n}\r\n\r\nexport default NewMessage;","import React from 'react';\r\nimport styles from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport NewMessage from './NewMessage';\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements = props.dialogs.map( dialog => {\r\n        return (\r\n            <DialogItem \r\n                key = {dialog.id} \r\n                name = {dialog.name} \r\n                id = {dialog.id}\r\n            />);\r\n    });\r\n    let messagesElements = props.messages.map( message => {\r\n        return (\r\n            <Message \r\n            key = {message.id} \r\n            message = { message.message }\r\n            author = {message.author}\r\n            time = {message.time}\r\n            />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className = {styles.dialogs}> \r\n            <div className = {styles.dialogs__items}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className = {styles.messages}>\r\n                { messagesElements }\r\n                <NewMessage sendMessage={props.addMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport Dialogs from './Dialogs';\r\nimport { sendMessageCreator } from '../../redux/dialogsReducer';\r\nimport {connect} from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        newMessageText: state.dialogsPage.newMessageText\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (messageBody) => {\r\n            dispatch(sendMessageCreator(messageBody));\r\n        }\r\n    }\r\n};\r\n\r\ncompose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}